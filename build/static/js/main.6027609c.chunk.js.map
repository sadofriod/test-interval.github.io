{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","one","options","useState","value","color","intervalType","items","setItems","updateValue","setUpdateValue","errorSet","seterrorSet","getErrorMessage","sourceIndex","item","filter","condition","map","index","length","join","getRealValue","type","includes","Infinity","useEffect","recursion","values","newItem","console","log","newValue","newType","newIndex","start","end","sStart","sEnd","handleValueChange","rowIndex","valueIndex","itemData","slice","Number","className","onClick","push","pop","isOne","onChange","e","handleSelectChange","target","defaultValue","onBlur","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6027609c.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n\tconst one = [\"over\", \"less\", \"noMoreThan\", \"noLessThan\", \"equle\"];\n\n\tconst two = [\"close\", \"open\", \"rightOpen\", \"leftOpen\"];\n\n\tconst options = [...one, ...two];\n\n\tconst mockData = [\n\t\t{\n\t\t\tvalue: [5, 15],\n\t\t\tcolor: \"#222\",\n\t\t\tintervalType: \"close\",\n\t\t},\n\t\t{\n\t\t\tvalue: [1, 4],\n\t\t\tcolor: \"#222\",\n\t\t\tintervalType: \"close\",\n\t\t},\n\t\t{\n\t\t\tvalue: [16, 18],\n\t\t\tcolor: \"#222\",\n\t\t\tintervalType: \"close\",\n\t\t},\n\t];\n\n\tconst [items, setItems] = useState(mockData);\n\n\tconst [updateValue, setUpdateValue] = useState(null);\n\n\tconst [errorSet, seterrorSet] = useState([]);\n\n\tconst getErrorMessage = (sourceIndex) => {\n\t\tconst item = errorSet.filter((item) => !item.condition).map((item) => item.index + 1);\n\t\tconst isChange = updateValue && updateValue.index === sourceIndex;\n\t\treturn isChange && item.length ? `和第${item.join(\",\")}项的条件冲突` : null;\n\t};\n\n\tconst getRealValue = (value, type) => {\n\t\tif (type === \"equle\") {\n\t\t\treturn [value[0], value[0]];\n\t\t} else if (one.includes(type)) {\n\t\t\t//\"over\", \"less\", \"noMoreThan\", \"noLessThan\"\n\t\t\tif (type === \"over\" || type === \"noLessThan\") {\n\t\t\t\treturn [value[0], Infinity];\n\t\t\t}\n\t\t\tif (type === \"less\" || type === \"noMoreThan\") {\n\t\t\t\treturn [-Infinity, value[0]];\n\t\t\t}\n\t\t} else {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (updateValue) {\n\t\t\t// console.log();\n\t\t\tseterrorSet(recursion(items, updateValue));\n\t\t}\n\t}, [items, updateValue]);\n\n\tconst recursion = (values, newItem) => {\n\t\tconsole.log(values);\n\t\treturn values.map((item, index) => {\n\t\t\tconst { value, intervalType } = item;\n\t\t\tconst { value: newValue, intervalType: newType, index: newIndex } = newItem;\n\t\t\tconst [start, end] = getRealValue(newValue, newType);\n\t\t\tconst [sStart, sEnd] = getRealValue(value, intervalType);\n\t\t\tconsole.log([start, end], [sStart, sEnd]);\n\t\t\tif (newIndex && index === newIndex) {\n\t\t\t\treturn {\n\t\t\t\t\tindex,\n\t\t\t\t\tcondition: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (end === sStart) {\n\t\t\t\tif (newType === \"rightOpen\" && intervalType === \"leftOpen\") {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (newType === \"leftOpen\" && intervalType === \"leftOpen\") {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (newType === \"rightOpen\" && intervalType === \"rightOpen\") {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (newType === \"rightOpen\" && intervalType === \"close\") {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === sEnd) {\n\t\t\t\tif (newType === \"leftOpen\" && intervalType === \"rightOpen\") {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (newType === \"leftOpen\" && intervalType === \"leftOpen\") {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (newType === \"rightOpen\" && intervalType === \"rightOpen\") {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (newType === \"leftOpen\" && intervalType === \"close\") {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start > sEnd) {\n\t\t\t\t//[a,b],[d,e] => a > e\n\t\t\t\treturn {\n\t\t\t\t\tindex,\n\t\t\t\t\tcondition: true,\n\t\t\t\t};\n\t\t\t}\n\t\t\t//[a,b],[d,e] => a > e\n\t\t\tif (end < sStart) {\n\t\t\t\treturn {\n\t\t\t\t\tindex,\n\t\t\t\t\tcondition: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tindex,\n\t\t\t\tcondition: false,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSelectChange = (index, value) => {\n\t\tconst isOne = one.includes(value);\n\t\tconst itemData = items.slice();\n\t\t// console.log(items, index);\n\t\titemData[index].intervalType = value;\n\t\tif (isOne && items[index].value.length > 1) {\n\t\t\titems[index].value.pop();\n\t\t}\n\t\titemData[index].index = index;\n\t\tsetItems(itemData);\n\t\tsetUpdateValue(itemData[index]);\n\t};\n\n\tconst handleValueChange = (rowIndex, valueIndex, value) => {\n\t\tconst itemData = items.slice();\n\t\titemData[rowIndex].value[valueIndex] = Number(value);\n\t\titemData[rowIndex].index = rowIndex;\n\t\tsetItems(itemData);\n\t\tsetUpdateValue(itemData[rowIndex]);\n\t};\n\n\tconst handleItemsAdd = () => {\n\t\tconst item = {\n\t\t\tvalue: [0, 0],\n\t\t\tcolor: \"#222\",\n\t\t\tintervalType: \"close\",\n\t\t};\n\t\tconst itemData = items.slice();\n\t\titemData.push(item);\n\t\tsetItems(itemData);\n\t\tsetUpdateValue(item);\n\t};\n\n\tconst handleItemsPop = () => {\n\t\tconst itemData = items.slice();\n\t\titemData.pop();\n\t\tsetItems(itemData);\n\t\tsetUpdateValue(null);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<button onClick={handleItemsAdd}>增加一项</button>\n\t\t\t<button onClick={handleItemsPop}>减少一项</button>\n\t\t\t{items.map((item, index) => {\n\t\t\t\tconst isOne = one.includes(item.intervalType);\n\t\t\t\treturn (\n\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t<select value={item.intervalType} onChange={(e) => handleSelectChange(index, e.target.value)}>\n\t\t\t\t\t\t\t{options.map((item, index) => (\n\t\t\t\t\t\t\t\t<option value={item} key={index}>\n\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<input defaultValue={item.value[0]} onBlur={(e) => handleValueChange(index, 0, e.target.value)} />\n\t\t\t\t\t\t{!isOne ? <input defaultValue={item.value[1]} onBlur={(e) => handleValueChange(index, 1, e.target.value)} /> : null}\n\t\t\t\t\t\t{getErrorMessage(index)}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}